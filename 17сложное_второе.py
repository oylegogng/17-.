def isprime(n): # Функция на проверку простоты числа.
    d = 2 # Наш делитель, который мы будем перебирать. Начинаем с двойки.
    while d*d <= n: # Таким образом мы идем до корня из числа, включая сам корень.
        if n%d == 0: # Проверяем делиться ли наше число на d.
            return False # Если наше число делится на d, то оно уже не является простым, поэтому функция возвращает Ложь
        d += 1 # Перебираем d
    return True # Если наше число ниразу не зашло в IF, то значит, что оно простое, возвращаем True.
def summacifr(n):
    mas = [] # Массив для цифр
    while n > 0:
        mas.append(n%10) # Добавляем массив цифры числа.
        n = n // 10 # Убираем добавленную цифру.
    return sum(mas) # Возвращаем сумму элементов массива.
k = 0
sr = 0
for n in range(50158, 62841+1): # основной цикл.
    d = 2 # делитель.
    summa = 0 # сумма простых делителей.
    while d*d < n: # Цикл идущий до корня.
        if n%d == 0: # Проверка делится ли наше число на d
            if isprime(d): # Если d простое число - прибавляем к сумме.
                summa += d
            if isprime(n//d): # Если частное от деления n на d простое число - прибавляем к сумме.
                summa += n//d
        d+=1 # Перебираем делитель.
    if d*d == n: # Проверяем корень из числа.
        if isprime(int(n**0.5)): # Если корень - простое число - прибавляем к сумме.
            summa += int(n**0.5)
    if summa != 0: # Если сумма не равно нулю.
        if n%summa == 0 and n%summacifr(n) == 0: # Если число делится на сумму простых делителей и делится на сумму своих цифр, то оно нам подходит.
            k+=1
            sr += n # Прибавляем наше число к общей сумме, что бы потом посчитать ср. арифметическое.
print(k, sr//k) # Считаем среднее арифметическое. Делим сумму чисел на их количество.
    
